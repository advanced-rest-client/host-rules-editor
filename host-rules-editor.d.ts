/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/tools/tree/master/packages/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   host-rules-editor.js
 */


// tslint:disable:variable-name Describing an API that's defined elsewhere.
// tslint:disable:no-any describes the API as best we are able today

import {PolymerElement} from '@polymer/polymer/polymer-element.js';

import {html} from '@polymer/polymer/lib/utils/html-tag.js';

import {afterNextRender} from '@polymer/polymer/lib/utils/render-status.js';

declare namespace UiElements {

  /**
   * An element to render host rules mapping editor.
   *
   * Host rules mapping allow ARC to redirect connection from one URI to another
   * without changinh the `host` header value. This element allows to enter mapping
   * rules and to test them agains arbitrary URL.
   *
   * NOTE: This element does not provide data storing interface. Instead of operating
   * on a data store it sends custom events that should be handled by the hosting
   * application. Example inferface is included in `arc-models/host-rules-model` element.
   *
   * NOTE: This element works with `arc-data-export` element to export data to a file.
   * You can use other way to handle `export-user-data` custom event to export host
   * rules data.
   *
   * ### Example
   *
   * ```
   * <arc-data-export></arc-data-export>
   * <host-rules-model></host-rules-model>
   * <host-rules-editor></host-rules-editor>
   * ```
   *
   * ### Data model
   *
   * The `items` property accepts an array of the following objects:
   *
   * ```javascript
   * {
   *    from: String, // The from rule (may contain asterisks)
   *    to: String, // replacement value
   *    enabled: Boolean, // if false the rule is ignored
   *    comment: String // optional rule description
   * }
   * ```
   *
   * ### Narrow view
   *
   * The element does not recognizes screen size to render mobile like view. To render
   * narrow view (that fit mobile screen or narrow drawer etc) set `narrow` attribute
   * on the element
   *
   * ```html
   * <host-rules-editor narrow></host-rules-editor>
   * ```
   *
   * ### Styling
   *
   * `<host-rules-editor>` provides the following custom properties and mixins for styling:
   *
   * Custom property | Description | Default
   * ----------------|-------------|----------
   * `--host-rules-editor` | Mixin applied to the element | `{}`
   * `--inline-fom-action-icon-color` | Color of the icons in the form editor | `rgba(0, 0, 0, 0.74)`
   * `--inline-fom-action-icon-color-hover` | Color of the icons in the form editor when hovering | * `--accent-color` or `rgba(0, 0, 0, 0.74)`
   * `--host-rules-editor-loader` | Mixin applied to the paper-progress element when loading rules | `{}`
   * `--host-rules-editor-empty-screen` | Mixin applied to the empty screen message | `{}`
   * `--host-rules-editor-item-input` | Mixin applied to the rules inputs | `{}`
   * `--host-rules-editor-item-comment-input` | Mixin applied to the comment textarea input | `{}`
   * `--host-rules-editor-item-comment-input-narrow` | Mixin applied to the comment textarea input in narrow view | `{}`
   * `--host-rules-editor-tutorial-toast` | Mixin applied to the tutorial toast element | `{}`
   */
  class HostRulesEditor extends PolymerElement {

    /**
     * List of saved items restored from the datastore.
     */
    items: any[]|null|undefined;

    /**
     * Computed value, true if `items` is set.
     */
    readonly hasItems: boolean|null|undefined;

    /**
     * True when loading data from the datastore.
     */
    readonly loading: boolean|null|undefined;

    /**
     * A computed flag that determines that the query to the databastore
     * has been performed and empty result was returned.
     * This can be true only if not in search.
     */
    readonly dataUnavailable: boolean|null|undefined;

    /**
     * If set it renders "narrow" view fow small screens
     */
    narrow: boolean|null|undefined;

    /**
     * If true the rules tester is visible.
     */
    rulesTesterOpened: boolean|null|undefined;
    _tutorialAllowed: boolean|null|undefined;

    /**
     * When set it won't ask the model for data when connected to the DOM.
     */
    noAuto: boolean|null|undefined;
    connectedCallback(): void;
    disconnectedCallback(): void;

    /**
     * Refreshes the list of rules from the model.
     * This element is designed to work with `arc-models/host-rules-model`
     * element but can work with any model that handles `host-rules-list`
     * custom event.
     *
     * Calling this function will replace current `items` value with the one
     * received from the model.
     */
    refresh(): Promise<any>|null;

    /**
     * Computes value for the `dataUnavailable` proeprty
     */
    _computeDataUnavailable(hasItems: any, loading: any): any;

    /**
     * Computes and sets value for `hasItems` property
     */
    _itemsChanged(value: any): void;
    _closeMainMenu(): void;

    /**
     * Handler for export all to file menu click
     */
    _onExportAll(): void;

    /**
     * Handler for export all to Google Drive menu click
     */
    _onExportAllDrive(): void;

    /**
     * Dispatches `arc-data-export` custom event.
     *
     * @param destination File storage destination.
     */
    _sendExport(destination: String|null): void;
    _dispatchExport(destination: any): any;

    /**
     * Appends empty rule to the rules list.
     */
    appendRule(): void;

    /**
     * Handler for delete rule event from an item.
     */
    _deleteRule(e: CustomEvent|null): Promise<any>|null;
    _modelChanged(record: any): void;

    /**
     * Updates a rule from the `host-rules-changed` custom event.
     * The event should contain `rule` property on the event's detail object
     * containing the rule object.
     */
    _ruleUpdated(e: CustomEvent|null): void;

    /**
     * Deletes the rule from the `host-rules-deleted` custom event.
     * The event should contain `rule` property on the event's detail object
     * containing the rule object.
     */
    _ruleDeleted(e: CustomEvent|null): void;

    /**
     * Toggles the rule tester view.
     * Use `rulesTesterOpened` property to control the view instead of calling
     * this function.
     */
    toggleRulesTester(): void;
    _onLearnMore(): any;
    _deleteAll(): void;

    /**
     * Called when the delete warning dialog closes.
     *
     * The function dispatches custom event handled by the model to remove all
     * data.
     */
    _onClearDialogResult(e: CustomEvent|null): Promise<any>|null;

    /**
     * Handler for non cancelable `host-rules-clear` to remove all rules.
     */
    _rulesCleared(e: CustomEvent|null): void;
  }
}

declare global {

  interface HTMLElementTagNameMap {
    "host-rules-editor": UiElements.HostRulesEditor;
  }
}
